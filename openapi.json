{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "RBKmoney Sender API",
    "description": "RBKmoney Sender API является интерфейсом для отправки сообщений\n\nСхема которого описывается в соответствии со стандартом [OpenAPI 3][OAS3].\n\n[OAS3]: https://swagger.io/specification/\n\n## Формат содержимого\n\nЛюбой запрос к API должен выполняться в кодировке UTF-8 и с указанием\nсодержимого в формате JSON.\n\n```\nContent-Type: application/json; charset=utf-8\n```\n",
    "termsOfService": "http://rbk.money/",
    "contact": {
      "name": "RBKmoney support team",
      "email": "support@rbk.money",
      "url": "https://developer.rbk.money"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/message/feedback": {
      "post": {
        "summary": "Отправка обратной связи на почту",
        "operationId": "sendFeedbackEmailMsg",
        "tags": [
          "messages"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/requestId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "description": "Содержание сообщения",
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Сообщение успешно отправлено"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/message/exclusion-rules/{ruleID}": {
      "get": {
        "summary": "Получение правила исключения рассылки",
        "tags": [
          "MessageExclusionRules"
        ],
        "operationId": "getMessageExclusionRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/requestId"
          },
          {
            "$ref": "#/components/parameters/ruleID"
          }
        ],
        "responses": {
          "200": {
            "description": "Правило исключения рассылки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageExclusionRule"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/message/exclusion-rules/{ruleID}/delete": {
      "delete": {
        "summary": "Удаление правила исключения рассылки",
        "tags": [
          "MessageExclusionRules"
        ],
        "operationId": "deleteMessageExclusionRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/requestId"
          },
          {
            "$ref": "#/components/parameters/ruleID"
          }
        ],
        "responses": {
          "200": {
            "description": "Правило удалено"
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/message/exclusion-rules/search": {
      "get": {
        "summary": "Поиск правил исключения рассылки по типу",
        "tags": [
          "MessageExclusionRules"
        ],
        "operationId": "getMessageExclusionRulesByType",
        "parameters": [
          {
            "$ref": "#/components/parameters/requestId"
          },
          {
            "$ref": "#/components/parameters/ruleType"
          }
        ],
        "responses": {
          "200": {
            "description": "Список правил исключения рассылки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageExclusionRuleList"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          }
        }
      }
    },
    "/message/exclusion-rules/create": {
      "post": {
        "summary": "Создание правила исключения рассылки",
        "tags": [
          "MessageExclusionRules"
        ],
        "operationId": "createMessageExclusionRule",
        "parameters": [
          {
            "$ref": "#/components/parameters/requestId"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MessageExclusionRuleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Созданное правило исключения рассылки",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MessageExclusionRule"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/AccessForbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://{subdomain}.rbk.money/sender/{version}",
      "variables": {
        "subdomain": {
          "default": "api"
        },
        "version": {
          "enum": [
            "v1"
          ],
          "default": "v1"
        }
      }
    }
  ],
  "security": [
    {
      "bearer": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Для аутентификации вызовов мы используем [JWT](https://jwt.io). Cоответствующий ключ передается в заголовке.\n```shell\n  Authorization: Bearer {TOKENIZATION|PRIVATE_JWT}\n```\n"
      }
    },
    "parameters": {
      "requestId": {
        "name": "X-Request-ID",
        "in": "header",
        "description": "Уникальный идентификатор запроса к системе",
        "required": true,
        "schema": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64,
          "example": "RQID-Z08G3EFE5DZ429VVO755BM19D51"
        }
      },
      "ruleID": {
        "name": "ruleID",
        "in": "path",
        "description": "Идентификатор правила",
        "required": true,
        "schema": {
          "type": "integer",
          "format": "int64"
        }
      },
      "ruleType": {
        "name": "type",
        "in": "query",
        "description": "Тип правила",
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/MessageExclusionRuleType"
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Переданы ошибочные данные",
        "content": {
          "application/json": {
            "schema": {
              "description": "Ошибка в переданных данных",
              "type": "object",
              "required": [
                "code"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "enum": [
                    "invalidRequest"
                  ]
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "AccessForbidden": {
        "description": "Ошибка авторизации"
      },
      "NotFound": {
        "description": "Заданный ресурс не найден",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "MessageExclusionRuleType": {
        "description": "Тип правила исключения рассылки",
        "type": "string",
        "enum": [
          "shop"
        ]
      },
      "MessageExclusionRule": {
        "type": "object",
        "required": [
          "id",
          "name",
          "type",
          "value"
        ],
        "properties": {
          "id": {
            "description": "Идентификатор правила",
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "description": "Название правила",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/MessageExclusionRuleType"
          },
          "value": {
            "description": "Набор исключенных значений",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "minimum": 100,
            "maximum": 600,
            "description": "The HTTP status code."
          },
          "error": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "A URI reference [[RFC3986](https://tools.ietf.org/html/rfc3986)] that identifies the problem type. It should provide human-readable documentation for the problem type. When this member is not present, its value is assumed to be \"about:blank\"."
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type. It SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
          }
        }
      },
      "MessageExclusionRuleList": {
        "type": "object",
        "properties": {
          "result": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageExclusionRule"
            }
          }
        }
      },
      "MessageExclusionRuleRequest": {
        "description": "Запрос на создание правила исключения рассылки",
        "type": "object",
        "required": [
          "name",
          "type",
          "value"
        ],
        "properties": {
          "name": {
            "description": "Название правила",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/MessageExclusionRuleType"
          },
          "value": {
            "description": "Набор исключенных значений",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}